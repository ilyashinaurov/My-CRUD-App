//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace КУРСОВАЯ.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TransportCompanyEntities : DbContext
    {
        public TransportCompanyEntities()
            : base("name=TransportCompanyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Заказ> Заказ { get; set; }
        public virtual DbSet<Водитель> Водитель { get; set; }
        public virtual DbSet<Клиент> Клиент { get; set; }
        public virtual DbSet<Маршрут> Маршрут { get; set; }
        public virtual DbSet<МодельПрицепа> МодельПрицепа { get; set; }
        public virtual DbSet<МодельТС> МодельТС { get; set; }
        public virtual DbSet<Пользователь> Пользователь { get; set; }
        public virtual DbSet<Прицеп> Прицеп { get; set; }
        public virtual DbSet<ТС> ТС { get; set; }
        public virtual DbSet<РасходВсехТС> РасходВсехТС { get; set; }
    
        public virtual ObjectResult<РасходВсехТСПроцедура_Result> РасходВсехТСПроцедура(Nullable<System.DateTime> датаНачала, Nullable<System.DateTime> датаКонца)
        {
            var датаНачалаParameter = датаНачала.HasValue ?
                new ObjectParameter("ДатаНачала", датаНачала) :
                new ObjectParameter("ДатаНачала", typeof(System.DateTime));
    
            var датаКонцаParameter = датаКонца.HasValue ?
                new ObjectParameter("ДатаКонца", датаКонца) :
                new ObjectParameter("ДатаКонца", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<РасходВсехТСПроцедура_Result>("РасходВсехТСПроцедура", датаНачалаParameter, датаКонцаParameter);
        }
    
        public virtual ObjectResult<РасходВсехТС2Пр_Result> РасходВсехТС2Пр(Nullable<System.DateTime> датаНачала, Nullable<System.DateTime> датаКонца)
        {
            var датаНачалаParameter = датаНачала.HasValue ?
                new ObjectParameter("ДатаНачала", датаНачала) :
                new ObjectParameter("ДатаНачала", typeof(System.DateTime));
    
            var датаКонцаParameter = датаКонца.HasValue ?
                new ObjectParameter("ДатаКонца", датаКонца) :
                new ObjectParameter("ДатаКонца", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<РасходВсехТС2Пр_Result>("РасходВсехТС2Пр", датаНачалаParameter, датаКонцаParameter);
        }
    
        public virtual ObjectResult<РасходТС2Период_Result> РасходТС2Период(Nullable<System.DateTime> датаНачала, Nullable<System.DateTime> датаКонца)
        {
            var датаНачалаParameter = датаНачала.HasValue ?
                new ObjectParameter("ДатаНачала", датаНачала) :
                new ObjectParameter("ДатаНачала", typeof(System.DateTime));
    
            var датаКонцаParameter = датаКонца.HasValue ?
                new ObjectParameter("ДатаКонца", датаКонца) :
                new ObjectParameter("ДатаКонца", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<РасходТС2Период_Result>("РасходТС2Период", датаНачалаParameter, датаКонцаParameter);
        }
    
        public virtual ObjectResult<ИспользованиеТС_Result> ИспользованиеТС()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ИспользованиеТС_Result>("ИспользованиеТС");
        }
    
        public virtual ObjectResult<ОбщийПробегТС_Result> ОбщийПробегТС()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ОбщийПробегТС_Result>("ОбщийПробегТС");
        }
    
        public virtual ObjectResult<ПробегТСПериод_Result> ПробегТСПериод(Nullable<System.DateTime> датаНачала, Nullable<System.DateTime> датаКонца)
        {
            var датаНачалаParameter = датаНачала.HasValue ?
                new ObjectParameter("ДатаНачала", датаНачала) :
                new ObjectParameter("ДатаНачала", typeof(System.DateTime));
    
            var датаКонцаParameter = датаКонца.HasValue ?
                new ObjectParameter("ДатаКонца", датаКонца) :
                new ObjectParameter("ДатаКонца", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ПробегТСПериод_Result>("ПробегТСПериод", датаНачалаParameter, датаКонцаParameter);
        }
    }
}
